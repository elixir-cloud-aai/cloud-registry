# FOCA configuration
# Available in app context as attributes of `current_app.config['FOCA']`
# Automatically validated via FOCA
# Cf. https://foca.readthedocs.io/en/latest/modules/foca.models.html

# Server configuration
# Cf. https://foca.readthedocs.io/en/latest/modules/foca.models.html#foca.models.config.ServerConfig
server:
    host: '0.0.0.0'
    port: 8080
    debug: True
    environment: development
    testing: False
    use_reloader: False

# Security configuration
# Cf. https://foca.readthedocs.io/en/latest/modules/foca.models.html#foca.models.config.SecurityConfig
security:
    auth:
        add_key_to_claims: True
        algorithms:
          - RS256
        allow_expired: False
        audience: null
        validation_methods:
          - userinfo
          - public_key
        validation_checks: any

# Database configuration
# Cf. https://foca.readthedocs.io/en/latest/modules/foca.models.html#foca.models.config.DBConfig
db:
    host: mongodb
    port: 27017
    dbs:
        serviceStore:
            collections:
                services:
                    indexes:
                        - keys:
                              id: 1
                          options:
                            'unique': True
                service_info:
                    indexes:
                        - keys:
                              id: 1
                          options:
                            'unique': True

# API configuration
# Cf. https://foca.readthedocs.io/en/latest/modules/foca.models.html#foca.models.config.APIConfig
api:
    specs:
        - path:
            - api/20201108.11d2c12.service-info.yaml
            - api/20201108.e0358db.openapi.yaml
            - api/additions.openapi.yaml
          add_operation_fields:
              x-openapi-router-controller: ga4gh.registry.server
          add_security_fields:
              x-bearerInfoFunc: app.validate_token
          disable_auth: False
          connexion:
              strict_validation: True
              validate_responses: True
              options:
                  swagger_ui: True
                  serve_spec: True

# Logging configuration
# Cf. https://foca.readthedocs.io/en/latest/modules/foca.models.html#foca.models.config.LogConfig
log:
    version: 1
    disable_existing_loggers: False
    formatters:
        standard:
            class: logging.Formatter
            style: "{"
            format: "[{asctime}: {levelname:<8}] {message} [{name}]"
    handlers:
        console:
            class: logging.StreamHandler
            level: 20
            formatter: standard
            stream: ext://sys.stderr
    root:
        level: 10
        handlers: [console]

exceptions:
    required_members: [['detail'], ['status'], ['title']]
    status_member: ['status']
    exceptions: cloud_registry.exceptions.exceptions

custom:
    endpoints:
        service:
            url_prefix: https
            external_host: 0.0.0.0
            external_port: 8080
            api_path: ''
        service_info:
            id: "ELIXIR_CLOUD_SERVICE_REGISTRY_1"
            name: "ELIXIR_CLOUD"
            type:
                group: "org.ga4gh"
                artifact: "service-registry"
                version: "1.0.0"
            description: "Service registry for the ELIXIR Cloud network."
            organization:
                name: "ELIXIR Cloud & AAI"
                url: "https://github.com/elixir-cloud-aai/elixir-cloud-aai"
            contactUrl: "https://github.com/elixir-cloud-aai/elixir-cloud-aai"
            documentationUrl: "https://github.com/elixir-cloud-aai/elixir-cloud-aai"
            createdAt: '2020-11-04T12:58:19Z'
            updatedAt: '2020-11-04T12:58:19Z'
            environment: "dev"
            version: "1.0.0-dev-201109"
        services:
            id:
                charset: string.ascii_uppercase + string.digits
                length: 6
            meta_version:
                init: 1
                increment: 1
